{
    "info": {
        "name": "SmartEconomy API - Complete Collection",
        "description": "Collection completa da API GraphQL SmartEconomy com todos os módulos implementados",
        "version": "2.0.0",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "variable": [
        {
            "key": "base_url",
            "value": "http://localhost:3000",
            "type": "string"
        },
        {
            "key": "graphql_endpoint",
            "value": "{{base_url}}/graphql",
            "type": "string"
        },
        {
            "key": "access_token",
            "value": "",
            "type": "string"
        },
        {
            "key": "refresh_token",
            "value": "",
            "type": "string"
        },
        {
            "key": "user_id",
            "value": "",
            "type": "string"
        },
        {
            "key": "account_id",
            "value": "",
            "type": "string"
        }
    ],
    "item": [
        {
            "name": "🎯 Basic",
            "description": "Queries básicas da aplicação",
            "item": [
                {
                    "name": "Hello World",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query { hello }\"\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Query básica para testar conectividade"
                    }
                }
            ]
        },
        {
            "name": "🔐 Authentication",
            "description": "Autenticação e autorização de usuários",
            "item": [
                {
                    "name": "Login",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const response = pm.response.json();",
                                    "    if (response.data && response.data.login) {",
                                    "        pm.collectionVariables.set('access_token', response.data.login.accessToken);",
                                    "        pm.collectionVariables.set('refresh_token', response.data.login.refreshToken);",
                                    "        pm.collectionVariables.set('user_id', response.data.login.user.id);",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation Login($input: LoginInput!) { login(input: $input) { accessToken refreshToken expiresIn tokenType user { id email role } } }\",\n  \"variables\": {\n    \"input\": {\n      \"email\": \"admin@smarteconomy.com\",\n      \"password\": \"Admin123456!\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Fazer login e obter tokens de acesso"
                    }
                },
                {
                    "name": "Refresh Token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const response = pm.response.json();",
                                    "    if (response.data && response.data.refreshToken) {",
                                    "        pm.collectionVariables.set('access_token', response.data.refreshToken.accessToken);",
                                    "        pm.collectionVariables.set('refresh_token', response.data.refreshToken.refreshToken);",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation RefreshToken($input: RefreshTokenInput!) { refreshToken(input: $input) { accessToken refreshToken expiresIn tokenType user { id email role } } }\",\n  \"variables\": {\n    \"input\": {\n      \"refreshToken\": \"{{refresh_token}}\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Renovar token de acesso usando refresh token"
                    }
                },
                {
                    "name": "Validate Token",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query ValidateToken($input: ValidateTokenInput!) { validateToken(input: $input) { valid user { id email role } } }\",\n  \"variables\": {\n    \"input\": {\n      \"accessToken\": \"{{access_token}}\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Validar se um token de acesso é válido"
                    }
                },
                {
                    "name": "Logout",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation Logout($input: LogoutInput!) { logout(input: $input) { success message } }\",\n  \"variables\": {\n    \"input\": {\n      \"accessToken\": \"{{access_token}}\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Fazer logout e invalidar token"
                    }
                }
            ]
        },
        {
            "name": "👥 Users",
            "description": "Gestão completa de usuários",
            "item": [
                {
                    "name": "Get All Users",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query GetAllUsers { users { id email name lastname birthdate role genderId professionId profileId status createdAt updatedAt } }\"\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Buscar todos os usuários cadastrados"
                    }
                },
                {
                    "name": "Get User by ID",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query GetUserById($id: String!) { userById(id: $id) { id email name lastname birthdate role genderId professionId profileId status createdAt updatedAt } }\",\n  \"variables\": {\n    \"id\": \"{{user_id}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Buscar usuário específico por ID"
                    }
                },
                {
                    "name": "Get User by Email",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query GetUserByEmail($email: String!) { userByEmail(email: $email) { id email name lastname birthdate role genderId professionId profileId status createdAt updatedAt } }\",\n  \"variables\": {\n    \"email\": \"admin@smarteconomy.com\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Buscar usuário por endereço de email"
                    }
                },
                {
                    "name": "Search Users",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query SearchUsers($input: SearchUsersInput!) { searchUsers(input: $input) { items { id email name lastname role status createdAt } total currentPage limit totalPages lastPage } }\",\n  \"variables\": {\n    \"input\": {\n      \"page\": 1,\n      \"limit\": 10,\n      \"filter\": \"\",\n      \"sort\": \"name\",\n      \"sortDirection\": \"asc\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Busca avançada de usuários com filtros e paginação"
                    }
                },
                {
                    "name": "Create User",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const response = pm.response.json();",
                                    "    if (response.data && response.data.createUser) {",
                                    "        pm.collectionVariables.set('user_id', response.data.createUser.id);",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation CreateUser($input: CreateUserInput!) { createUser(input: $input) { id email name lastname birthdate role genderId professionId status createdAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"email\": \"joao.silva@example.com\",\n      \"name\": \"João\",\n      \"lastname\": \"Silva\",\n      \"birthdate\": \"1990-01-15\",\n      \"role\": \"USER\",\n      \"genderId\": \"SUBSTITUIR_POR_GENDER_ID\",\n      \"professionId\": \"SUBSTITUIR_POR_PROFESSION_ID\",\n      \"password\": \"MinhaSenh@123\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Criar novo usuário no sistema"
                    }
                },
                {
                    "name": "Update User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation UpdateUser($id: String!, $input: UpdateUserInput!) { updateUser(id: $id, input: $input) { success user { id email name lastname updatedAt } message } }\",\n  \"variables\": {\n    \"id\": \"{{user_id}}\",\n    \"input\": {\n      \"name\": \"João Pedro\",\n      \"lastname\": \"Silva Santos\",\n      \"genderId\": \"SUBSTITUIR_POR_GENDER_ID\",\n      \"professionId\": \"SUBSTITUIR_POR_PROFESSION_ID\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Atualizar dados de usuário existente"
                    }
                },
                {
                    "name": "Delete User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation DeleteUser($id: String!) { deleteUser(id: $id) { success message } }\",\n  \"variables\": {\n    \"id\": \"{{user_id}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Deletar usuário do sistema"
                    }
                }
            ]
        },
        {
            "name": "💰 Accounts",
            "description": "Gestão de contas financeiras",
            "item": [
                {
                    "name": "Get Accounts by User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query AccountsByUser($userId: String!) { accountsByUser(userId: $userId) { id name type balance userId status createdAt updatedAt } }\",\n  \"variables\": {\n    \"userId\": \"{{user_id}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Buscar todas as contas de um usuário específico"
                    }
                },
                {
                    "name": "Get Account by ID",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query AccountById($id: String!) { accountById(id: $id) { id name type balance userId status createdAt updatedAt } }\",\n  \"variables\": {\n    \"id\": \"{{account_id}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Buscar conta específica por ID"
                    }
                },
                {
                    "name": "Create Checking Account",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const response = pm.response.json();",
                                    "    if (response.data && response.data.createAccount) {",
                                    "        pm.collectionVariables.set('account_id', response.data.createAccount.id);",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation CreateAccount($input: CreateAccountInput!) { createAccount(input: $input) { id name type balance userId status createdAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"name\": \"Conta Corrente Principal\",\n      \"type\": \"CHECKING\",\n      \"balance\": 1500.50,\n      \"userId\": \"{{user_id}}\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Criar conta corrente"
                    }
                },
                {
                    "name": "Create Savings Account",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation CreateAccount($input: CreateAccountInput!) { createAccount(input: $input) { id name type balance userId status createdAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"name\": \"Conta Poupança\",\n      \"type\": \"SAVINGS\",\n      \"balance\": 5000.00,\n      \"userId\": \"{{user_id}}\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Criar conta poupança"
                    }
                },
                {
                    "name": "Create Investment Account",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation CreateAccount($input: CreateAccountInput!) { createAccount(input: $input) { id name type balance userId status createdAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"name\": \"Conta de Investimentos\",\n      \"type\": \"INVESTMENT\",\n      \"balance\": 10000.00,\n      \"userId\": \"{{user_id}}\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Criar conta de investimentos"
                    }
                },
                {
                    "name": "Create Credit Card",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation CreateAccount($input: CreateAccountInput!) { createAccount(input: $input) { id name type balance userId status createdAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"name\": \"Cartão Visa Gold\",\n      \"type\": \"CREDIT_CARD\",\n      \"balance\": 0.00,\n      \"userId\": \"{{user_id}}\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Criar cartão de crédito"
                    }
                },
                {
                    "name": "Create Wallet",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation CreateAccount($input: CreateAccountInput!) { createAccount(input: $input) { id name type balance userId status createdAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"name\": \"Carteira Digital\",\n      \"type\": \"WALLET\",\n      \"balance\": 250.00,\n      \"userId\": \"{{user_id}}\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Criar carteira digital"
                    }
                }
            ]
        },
        {
            "name": "🏷️ Gender",
            "description": "Gestão de gêneros",
            "item": [
                {
                    "name": "Get All Genders",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query GetAllGenders { genders { id gender createdAt updatedAt } }\"\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Buscar todos os gêneros disponíveis"
                    }
                },
                {
                    "name": "Get Gender by ID",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query GetGenderById($id: String!) { gender(id: $id) { id gender createdAt updatedAt } }\",\n  \"variables\": {\n    \"id\": \"SUBSTITUIR_POR_GENDER_ID\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Buscar gênero específico por ID"
                    }
                },
                {
                    "name": "Create Gender",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation CreateGender($input: CreateGenderInput!) { createGender(input: $input) { id gender createdAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"gender\": \"Não-binário\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Criar novo gênero"
                    }
                }
            ]
        },
        {
            "name": "💼 Profession",
            "description": "Gestão de profissões",
            "item": [
                {
                    "name": "Get All Professions",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query GetAllProfessions { professions { id profession createdAt updatedAt } }\"\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Buscar todas as profissões disponíveis"
                    }
                },
                {
                    "name": "Get Profession by ID",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query GetProfessionById($id: String!) { profession(id: $id) { id profession createdAt updatedAt } }\",\n  \"variables\": {\n    \"id\": \"SUBSTITUIR_POR_PROFESSION_ID\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Buscar profissão específica por ID"
                    }
                },
                {
                    "name": "Create Profession",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation CreateProfession($input: CreateProfessionInput!) { createProfession(input: $input) { id profession createdAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"profession\": \"Desenvolvedor Full Stack\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Criar nova profissão"
                    }
                }
            ]
        },
        {
            "name": "� Transactions",
            "description": "Gestão completa de transações financeiras",
            "item": [
                {
                    "name": "Search Transactions",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query SearchTransactions($userId: String!, $filters: String, $sortBy: String, $sortOrder: String, $page: Float, $limit: Float) { searchTransactions(userId: $userId, filters: $filters, sortBy: $sortBy, sortOrder: $sortOrder, page: $page, limit: $limit) }\",\n  \"variables\": {\n    \"userId\": \"{{user_id}}\",\n    \"filters\": \"{\\\"type\\\": [\\\"INCOME\\\", \\\"EXPENSE\\\"], \\\"dateFrom\\\": \\\"2024-01-01\\\", \\\"dateTo\\\": \\\"2024-12-31\\\"}\",\n    \"sortBy\": \"date\",\n    \"sortOrder\": \"DESC\",\n    \"page\": 1,\n    \"limit\": 20\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Buscar transações com filtros avançados"
                    }
                },
                {
                    "name": "Get Transaction by ID",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query GetTransactionById($id: String!) { transactionById(id: $id) }\",\n  \"variables\": {\n    \"id\": \"SUBSTITUIR_POR_TRANSACTION_ID\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Buscar transação específica por ID"
                    }
                },
                {
                    "name": "Get Transactions by Account",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query GetTransactionsByAccount($accountId: String!) { transactionsByAccount(accountId: $accountId) }\",\n  \"variables\": {\n    \"accountId\": \"{{account_id}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Buscar todas as transações de uma conta específica"
                    }
                },
                {
                    "name": "Get Transaction Summary",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query GetTransactionSummary($accountId: String!, $dateFrom: String!, $dateTo: String!) { transactionSummary(accountId: $accountId, dateFrom: $dateFrom, dateTo: $dateTo) }\",\n  \"variables\": {\n    \"accountId\": \"{{account_id}}\",\n    \"dateFrom\": \"2024-01-01\",\n    \"dateTo\": \"2024-12-31\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Obter resumo financeiro de uma conta em período específico"
                    }
                },
                {
                    "name": "Create Income Transaction",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation CreateTransaction($input: CreateTransactionInput!) { createTransaction(input: $input) { id description amount type accountId categoryId status date createdAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"description\": \"Salário mensal\",\n      \"amount\": 5000.00,\n      \"type\": \"INCOME\",\n      \"accountId\": \"{{account_id}}\",\n      \"categoryId\": \"SUBSTITUIR_POR_CATEGORY_ID\",\n      \"date\": \"2024-03-01T00:00:00Z\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Criar transação de receita"
                    }
                },
                {
                    "name": "Create Expense Transaction",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation CreateTransaction($input: CreateTransactionInput!) { createTransaction(input: $input) { id description amount type accountId categoryId status date createdAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"description\": \"Compras no supermercado\",\n      \"amount\": 350.75,\n      \"type\": \"EXPENSE\",\n      \"accountId\": \"{{account_id}}\",\n      \"categoryId\": \"SUBSTITUIR_POR_CATEGORY_ID\",\n      \"date\": \"2024-03-15T14:30:00Z\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Criar transação de despesa"
                    }
                },
                {
                    "name": "Create Transfer Transaction",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation CreateTransaction($input: CreateTransactionInput!) { createTransaction(input: $input) { id description amount type accountId destinationAccountId categoryId status date createdAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"description\": \"Transferência para poupança\",\n      \"amount\": 1000.00,\n      \"type\": \"TRANSFER\",\n      \"accountId\": \"{{account_id}}\",\n      \"destinationAccountId\": \"SUBSTITUIR_POR_DESTINATION_ACCOUNT_ID\",\n      \"categoryId\": \"SUBSTITUIR_POR_CATEGORY_ID\",\n      \"date\": \"2024-03-20T10:00:00Z\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Criar transação de transferência entre contas"
                    }
                },
                {
                    "name": "Update Transaction",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation UpdateTransaction($id: String!, $input: UpdateTransactionInput!) { updateTransaction(id: $id, input: $input) { id description status updatedAt } }\",\n  \"variables\": {\n    \"id\": \"SUBSTITUIR_POR_TRANSACTION_ID\",\n    \"input\": {\n      \"description\": \"Compras no supermercado - atualizado\",\n      \"status\": \"COMPLETED\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Atualizar transação existente"
                    }
                },
                {
                    "name": "Complete Transaction",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation CompleteTransaction($id: String!) { completeTransaction(id: $id) { id status updatedAt } }\",\n  \"variables\": {\n    \"id\": \"SUBSTITUIR_POR_TRANSACTION_ID\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Completar transação pendente"
                    }
                },
                {
                    "name": "Cancel Transaction",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation CancelTransaction($id: String!) { cancelTransaction(id: $id) { id status updatedAt } }\",\n  \"variables\": {\n    \"id\": \"SUBSTITUIR_POR_TRANSACTION_ID\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Cancelar transação pendente"
                    }
                },
                {
                    "name": "Reverse Transaction",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation ReverseTransaction($id: String!, $reason: String) { reverseTransaction(id: $id, reason: $reason) { id status updatedAt } }\",\n  \"variables\": {\n    \"id\": \"SUBSTITUIR_POR_TRANSACTION_ID\",\n    \"reason\": \"Pagamento duplicado\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Reverter transação completada (até 30 dias)"
                    }
                }
            ]
        },
        {
            "name": "📊 Dashboards",
            "description": "Métricas e análises financeiras",
            "item": [
                {
                    "name": "Get Dashboard Metrics",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query GetDashboardMetrics($userId: String!, $period: String, $dateFrom: String, $dateTo: String, $accountIds: [String!], $categoryIds: [String!]) { dashboardMetrics(userId: $userId, period: $period, dateFrom: $dateFrom, dateTo: $dateTo, accountIds: $accountIds, categoryIds: $categoryIds) }\",\n  \"variables\": {\n    \"userId\": \"{{user_id}}\",\n    \"period\": \"month\",\n    \"accountIds\": [],\n    \"categoryIds\": []\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Obter métricas completas do dashboard financeiro"
                    }
                },
                {
                    "name": "Get Financial Trends",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query GetFinancialTrends($userId: String!, $months: Float) { financialTrends(userId: $userId, months: $months) }\",\n  \"variables\": {\n    \"userId\": \"{{user_id}}\",\n    \"months\": 6\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Analisar tendências financeiras dos últimos meses"
                    }
                },
                {
                    "name": "Get Accounts Summary",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query GetAccountsSummary($userId: String!) { accountsSummary(userId: $userId) }\",\n  \"variables\": {\n    \"userId\": \"{{user_id}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Obter resumo consolidado de todas as contas"
                    }
                },
                {
                    "name": "Get Financial Alerts",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query GetFinancialAlerts($userId: String!) { financialAlerts(userId: $userId) }\",\n  \"variables\": {\n    \"userId\": \"{{user_id}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Obter alertas e notificações financeiras inteligentes"
                    }
                },
                {
                    "name": "Get Category Analysis",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query GetCategoryAnalysis($userId: String!, $period: String) { categoryAnalysis(userId: $userId, period: $period) }\",\n  \"variables\": {\n    \"userId\": \"{{user_id}}\",\n    \"period\": \"month\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Análise detalhada de gastos por categoria"
                    }
                },
                {
                    "name": "Get Period Comparison",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query GetPeriodComparison($userId: String!, $period: String!) { periodComparison(userId: $userId, period: $period) }\",\n  \"variables\": {\n    \"userId\": \"{{user_id}}\",\n    \"period\": \"month\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Comparar métricas entre períodos atual e anterior"
                    }
                },
                {
                    "name": "Dashboard Custom Period",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query GetDashboardCustomPeriod($userId: String!, $dateFrom: String, $dateTo: String, $accountIds: [String!], $categoryIds: [String!]) { dashboardMetrics(userId: $userId, dateFrom: $dateFrom, dateTo: $dateTo, accountIds: $accountIds, categoryIds: $categoryIds) }\",\n  \"variables\": {\n    \"userId\": \"{{user_id}}\",\n    \"dateFrom\": \"2024-01-01\",\n    \"dateTo\": \"2024-12-31\",\n    \"accountIds\": [],\n    \"categoryIds\": []\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Dashboard com período customizado e filtros específicos"
                    }
                }
            ]
        },
        {
            "name": "📂 Categories",
            "description": "Gestão de categorias",
            "item": [
                {
                    "name": "Get All Categories",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query GetAllCategories { categories { id category createdAt updatedAt } }\"\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Buscar todas as categorias disponíveis"
                    }
                },
                {
                    "name": "Get Category by ID",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query GetCategoryById($id: String!) { category(id: $id) { id category createdAt updatedAt } }\",\n  \"variables\": {\n    \"id\": \"SUBSTITUIR_POR_CATEGORY_ID\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Buscar categoria específica por ID"
                    }
                },
                {
                    "name": "Create Category - Alimentação",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation CreateCategory($input: CreateCategoryInput!) { createCategory(input: $input) { id category createdAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"category\": \"Alimentação\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Criar categoria Alimentação"
                    }
                },
                {
                    "name": "Create Category - Transporte",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation CreateCategory($input: CreateCategoryInput!) { createCategory(input: $input) { id category createdAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"category\": \"Transporte\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Criar categoria Transporte"
                    }
                },
                {
                    "name": "Create Category - Moradia",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation CreateCategory($input: CreateCategoryInput!) { createCategory(input: $input) { id category createdAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"category\": \"Moradia\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Criar categoria Moradia"
                    }
                },
                {
                    "name": "Create Category - Lazer",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation CreateCategory($input: CreateCategoryInput!) { createCategory(input: $input) { id category createdAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"category\": \"Lazer\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Criar categoria Lazer"
                    }
                },
                {
                    "name": "Create Category - Transferência",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation CreateCategory($input: CreateCategoryInput!) { createCategory(input: $input) { id category createdAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"category\": \"Transferência\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Criar categoria Transferência"
                    }
                }
            ]
        },
        {
            "name": "🎯 Complete Workflow Examples",
            "description": "Exemplos de fluxos completos da aplicação SmartEconomy",
            "item": [
                {
                    "name": "Setup: Get Support Data",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query GetSupportData { genders { id gender } professions { id profession } categories { id category } }\"\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Obter dados de apoio (gêneros, profissões, categorias) para cadastros"
                    }
                },
                {
                    "name": "Complete User Journey",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query CompleteUserData($userId: String!) { userById(id: $userId) { id email name lastname role status createdAt } accountsByUser(userId: $userId) { id name type balance status createdAt } }\",\n  \"variables\": {\n    \"userId\": \"{{user_id}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Buscar dados completos do usuário e suas contas"
                    }
                },
                {
                    "name": "Financial Overview",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query FinancialOverview($userId: String!) { accountsByUser(userId: $userId) { id name type balance status } dashboardMetrics(userId: $userId, period: \\\"month\\\") accountsSummary(userId: $userId) financialAlerts(userId: $userId) }\",\n  \"variables\": {\n    \"userId\": \"{{user_id}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Visão geral financeira completa do usuário"
                    }
                },
                {
                    "name": "Monthly Financial Report",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query MonthlyReport($userId: String!, $accountId: String!) { dashboardMetrics(userId: $userId, period: \\\"month\\\") categoryAnalysis(userId: $userId, period: \\\"month\\\") financialTrends(userId: $userId, months: 3) transactionSummary(accountId: $accountId, dateFrom: \\\"2024-01-01\\\", dateTo: \\\"2024-12-31\\\") periodComparison(userId: $userId, period: \\\"month\\\") }\",\n  \"variables\": {\n    \"userId\": \"{{user_id}}\",\n    \"accountId\": \"{{account_id}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Relatório financeiro completo mensal"
                    }
                },
                {
                    "name": "Transaction Workflow",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query TransactionWorkflow($userId: String!, $accountId: String!) { searchTransactions(userId: $userId, filters: \\\"{\\\\\\\"status\\\\\\\": [\\\\\\\"PENDING\\\\\\\"], \\\\\\\"type\\\\\\\": [\\\\\\\"EXPENSE\\\\\\\"]}\\\", page: 1, limit: 10) transactionsByAccount(accountId: $accountId) transactionSummary(accountId: $accountId, dateFrom: \\\"2024-01-01\\\", dateTo: \\\"2024-12-31\\\") }\",\n  \"variables\": {\n    \"userId\": \"{{user_id}}\",\n    \"accountId\": \"{{account_id}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Fluxo completo de gestão de transações"
                    }
                },
                {
                    "name": "Analytics Dashboard Data",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query AnalyticsDashboard($userId: String!) { financialTrends(userId: $userId, months: 12) categoryAnalysis(userId: $userId, period: \\\"year\\\") periodComparison(userId: $userId, period: \\\"quarter\\\") financialAlerts(userId: $userId) }\",\n  \"variables\": {\n    \"userId\": \"{{user_id}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Dados completos para dashboard de analytics"
                    }
                },
                {
                    "name": "Account Management Flow",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query AccountManagement($userId: String!, $accountId: String!) { accountsByUser(userId: $userId) { id name type balance status lastTransaction: updatedAt } accountById(id: $accountId) { id name type balance status createdAt updatedAt } transactionsByAccount(accountId: $accountId) }\",\n  \"variables\": {\n    \"userId\": \"{{user_id}}\",\n    \"accountId\": \"{{account_id}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{graphql_endpoint}}",
                            "host": ["{{graphql_endpoint}}"]
                        },
                        "description": "Fluxo completo de gestão de contas"
                    }
                }
            ]
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "// Script para preparar requests se necessário"
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "// Testes globais para verificar responses",
                    "pm.test('Response should be 200 or have GraphQL errors', function () {",
                    "    pm.expect(pm.response.code).to.be.oneOf([200, 400]);",
                    "});",
                    "",
                    "if (pm.response.code === 200) {",
                    "    pm.test('Response should be valid JSON', function () {",
                    "        pm.response.to.be.json;",
                    "    });",
                    "",
                    "    const response = pm.response.json();",
                    "    if (response.errors) {",
                    "        pm.test('GraphQL errors should be logged', function () {",
                    "            console.log('GraphQL Errors:', response.errors);",
                    "        });",
                    "    }",
                    "}"
                ]
            }
        }
    ]
}
