{
    "info": {
        "name": "SmartEconomy - Auth Module",
        "description": "Collection completa para testar todas as funcionalidades do módulo de autenticação",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "variable": [
        {
            "key": "baseUrl",
            "value": "http://localhost:3000",
            "type": "string"
        },
        {
            "key": "accessToken",
            "value": "",
            "type": "string"
        },
        {
            "key": "refreshToken",
            "value": "",
            "type": "string"
        }
    ],
    "item": [
        {
            "name": "🔐 Auth - Login",
            "item": [
                {
                    "name": "Login - Sucesso",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation Login($input: LoginInput!) {\\n    login(input: $input) {\\n      accessToken\\n      refreshToken\\n      expiresIn\\n      tokenType\\n      user {\\n        id\\n        email\\n        role\\n      }\\n    }\\n  }\",\n  \"variables\": {\n    \"input\": {\n      \"email\": \"joao.carlos@example.com\",\n      \"password\": \"password123\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/graphql",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const response = pm.response.json();",
                                    "    if (response.data && response.data.login) {",
                                    "        pm.collectionVariables.set('accessToken', response.data.login.accessToken);",
                                    "        pm.collectionVariables.set('refreshToken', response.data.login.refreshToken);",
                                    "        console.log('Tokens salvos nas variáveis da collection');",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Login - Credenciais Inválidas",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation Login($input: LoginInput!) {\\n    login(input: $input) {\\n      accessToken\\n      refreshToken\\n      expiresIn\\n      tokenType\\n      user {\\n        id\\n        email\\n        role\\n      }\\n    }\\n  }\",\n  \"variables\": {\n    \"input\": {\n      \"email\": \"joao.carlos@example.com\",\n      \"password\": \"senhaerrada\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/graphql",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    }
                },
                {
                    "name": "Login - Usuário Não Encontrado",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation Login($input: LoginInput!) {\\n    login(input: $input) {\\n      accessToken\\n      refreshToken\\n      expiresIn\\n      tokenType\\n      user {\\n        id\\n        email\\n        role\\n      }\\n    }\\n  }\",\n  \"variables\": {\n    \"input\": {\n      \"email\": \"usuario.inexistente@example.com\",\n      \"password\": \"password123\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/graphql",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    }
                },
                {
                    "name": "Login - Email Inválido",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation Login($input: LoginInput!) {\\n    login(input: $input) {\\n      accessToken\\n      refreshToken\\n      expiresIn\\n      tokenType\\n      user {\\n        id\\n        email\\n        role\\n      }\\n    }\\n  }\",\n  \"variables\": {\n    \"input\": {\n      \"email\": \"email-invalido\",\n      \"password\": \"password123\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/graphql",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    }
                },
                {
                    "name": "Login - Senha Muito Curta",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation Login($input: LoginInput!) {\\n    login(input: $input) {\\n      accessToken\\n      refreshToken\\n      expiresIn\\n      tokenType\\n      user {\\n        id\\n        email\\n        role\\n      }\\n    }\\n  }\",\n  \"variables\": {\n    \"input\": {\n      \"email\": \"joao.carlos@example.com\",\n      \"password\": \"123\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/graphql",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "🔄 Auth - Refresh Token",
            "item": [
                {
                    "name": "Refresh Token - Sucesso",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation RefreshToken($input: RefreshTokenInput!) {\\n    refreshToken(input: $input) {\\n      accessToken\\n      refreshToken\\n      expiresIn\\n      tokenType\\n      user {\\n        id\\n        email\\n        role\\n      }\\n    }\\n  }\",\n  \"variables\": {\n    \"input\": {\n      \"refreshToken\": \"{{refreshToken}}\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/graphql",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const response = pm.response.json();",
                                    "    if (response.data && response.data.refreshToken) {",
                                    "        pm.collectionVariables.set('accessToken', response.data.refreshToken.accessToken);",
                                    "        pm.collectionVariables.set('refreshToken', response.data.refreshToken.refreshToken);",
                                    "        console.log('Tokens atualizados nas variáveis da collection');",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Refresh Token - Token Inválido",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation RefreshToken($input: RefreshTokenInput!) {\\n    refreshToken(input: $input) {\\n      accessToken\\n      refreshToken\\n      expiresIn\\n      tokenType\\n      user {\\n        id\\n        email\\n        role\\n      }\\n    }\\n  }\",\n  \"variables\": {\n    \"input\": {\n      \"refreshToken\": \"token-invalido\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/graphql",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "🚪 Auth - Logout",
            "item": [
                {
                    "name": "Logout - Sucesso",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation Logout($input: LogoutInput!) {\\n    logout(input: $input) {\\n      success\\n      message\\n    }\\n  }\",\n  \"variables\": {\n    \"input\": {\n      \"accessToken\": \"{{accessToken}}\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/graphql",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const response = pm.response.json();",
                                    "    if (response.data && response.data.logout && response.data.logout.success) {",
                                    "        pm.collectionVariables.set('accessToken', '');",
                                    "        pm.collectionVariables.set('refreshToken', '');",
                                    "        console.log('Tokens limpos após logout');",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "✅ Auth - Validate Token",
            "item": [
                {
                    "name": "Validate Token - Token Válido",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query ValidateToken($input: ValidateTokenInput!) {\\n    validateToken(input: $input) {\\n      valid\\n      user {\\n        id\\n        email\\n        role\\n      }\\n    }\\n  }\",\n  \"variables\": {\n    \"input\": {\n      \"accessToken\": \"{{accessToken}}\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/graphql",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    }
                },
                {
                    "name": "Validate Token - Token Inválido",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query ValidateToken($input: ValidateTokenInput!) {\\n    validateToken(input: $input) {\\n      valid\\n      user {\\n        id\\n        email\\n        role\\n      }\\n    }\\n  }\",\n  \"variables\": {\n    \"input\": {\n      \"accessToken\": \"token-invalido\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/graphql",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    }
                },
                {
                    "name": "Validate Token - Token Revogado",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query ValidateToken($input: ValidateTokenInput!) {\\n    validateToken(input: $input) {\\n      valid\\n      user {\\n        id\\n        email\\n        role\\n      }\\n    }\\n  }\",\n  \"variables\": {\n    \"input\": {\n      \"accessToken\": \"{{accessToken}}\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/graphql",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "🧪 Auth - Fluxo Completo",
            "item": [
                {
                    "name": "1. Login para obter tokens",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation Login($input: LoginInput!) {\\n    login(input: $input) {\\n      accessToken\\n      refreshToken\\n      expiresIn\\n      tokenType\\n      user {\\n        id\\n        email\\n        role\\n      }\\n    }\\n  }\",\n  \"variables\": {\n    \"input\": {\n      \"email\": \"joao.carlos@example.com\",\n      \"password\": \"password123\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/graphql",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const response = pm.response.json();",
                                    "    if (response.data && response.data.login) {",
                                    "        pm.collectionVariables.set('accessToken', response.data.login.accessToken);",
                                    "        pm.collectionVariables.set('refreshToken', response.data.login.refreshToken);",
                                    "        console.log('✅ Login realizado com sucesso');",
                                    "        console.log('User ID:', response.data.login.user.id);",
                                    "        console.log('User Email:', response.data.login.user.email);",
                                    "        console.log('User Role:', response.data.login.user.role);",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "2. Validar token obtido",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query ValidateToken($input: ValidateTokenInput!) {\\n    validateToken(input: $input) {\\n      valid\\n      user {\\n        id\\n        email\\n        role\\n      }\\n    }\\n  }\",\n  \"variables\": {\n    \"input\": {\n      \"accessToken\": \"{{accessToken}}\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/graphql",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const response = pm.response.json();",
                                    "    if (response.data && response.data.validateToken) {",
                                    "        console.log('✅ Token validado:', response.data.validateToken.valid);",
                                    "        if (response.data.validateToken.user) {",
                                    "            console.log('User:', response.data.validateToken.user);",
                                    "        }",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "3. Refresh token",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation RefreshToken($input: RefreshTokenInput!) {\\n    refreshToken(input: $input) {\\n      accessToken\\n      refreshToken\\n      expiresIn\\n      tokenType\\n      user {\\n        id\\n        email\\n        role\\n      }\\n    }\\n  }\",\n  \"variables\": {\n    \"input\": {\n      \"refreshToken\": \"{{refreshToken}}\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/graphql",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const response = pm.response.json();",
                                    "    if (response.data && response.data.refreshToken) {",
                                    "        pm.collectionVariables.set('accessToken', response.data.refreshToken.accessToken);",
                                    "        pm.collectionVariables.set('refreshToken', response.data.refreshToken.refreshToken);",
                                    "        console.log('✅ Token renovado com sucesso');",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "4. Validar token renovado",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query ValidateToken($input: ValidateTokenInput!) {\\n    validateToken(input: $input) {\\n      valid\\n      user {\\n        id\\n        email\\n        role\\n      }\\n    }\\n  }\",\n  \"variables\": {\n    \"input\": {\n      \"accessToken\": \"{{accessToken}}\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/graphql",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const response = pm.response.json();",
                                    "    if (response.data && response.data.validateToken) {",
                                    "        console.log('✅ Token renovado validado:', response.data.validateToken.valid);",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "5. Logout",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"mutation Logout($input: LogoutInput!) {\\n    logout(input: $input) {\\n      success\\n      message\\n    }\\n  }\",\n  \"variables\": {\n    \"input\": {\n      \"accessToken\": \"{{accessToken}}\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/graphql",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const response = pm.response.json();",
                                    "    if (response.data && response.data.logout && response.data.logout.success) {",
                                    "        pm.collectionVariables.set('accessToken', '');",
                                    "        pm.collectionVariables.set('refreshToken', '');",
                                    "        console.log('✅ Logout realizado com sucesso');",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "6. Tentar validar token após logout",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"query ValidateToken($input: ValidateTokenInput!) {\\n    validateToken(input: $input) {\\n      valid\\n      user {\\n        id\\n        email\\n        role\\n      }\\n    }\\n  }\",\n  \"variables\": {\n    \"input\": {\n      \"accessToken\": \"{{accessToken}}\"\n    }\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/graphql",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const response = pm.response.json();",
                                    "    if (response.data && response.data.validateToken) {",
                                    "        console.log('✅ Token após logout:', response.data.validateToken.valid);",
                                    "        console.log('Esperado: false (token revogado)');",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ]
                }
            ]
        }
    ]
}